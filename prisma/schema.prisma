// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                      String                   @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  email                   String                   @unique
  password                String
  budget                  Budget[]
  category                Category[]
  transaction             Transaction[]
  financialProject        FinancialProject[]
  sharedFincancialProject SharedFinancialProject[]
  resource                Resource[]
}

model Budget {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  targetAmount    Float
  amountUsed      Float?
  amountRemaining Float?
  description     String?
  isActive        Boolean       @default(true)
  createAt        DateTime      @default(now())
  owner           User          @relation(fields: [ownerId], references: [id])
  ownerId         String        @db.ObjectId
  transaction     Transaction[]
}

model Category {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  emoji       String
  isIncome    Int //  0 or 1
  owner       User          @relation(fields: [ownerId], references: [id])
  ownerId     String        @db.ObjectId
  transaction Transaction[]
}

model Transaction {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     String   @db.ObjectId
  budget      Budget?  @relation(fields: [budgetId], references: [id])
  budgetId    String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String   @db.ObjectId
  amount      Float
  description String
  createAt    DateTime @default(now())
}

model FinancialProject {
  id                      String                   @id @default(auto()) @map("_id") @db.ObjectId
  owner                   User                     @relation(fields: [ownerId], references: [id])
  ownerId                 String                   @db.ObjectId
  name                    String
  targetAmount            Float
  amountSaved             Float
  status                  String // progres or completed
  startAt                 DateTime
  endAt                   DateTime
  sharedFincancialProject SharedFinancialProject[]
}

model SharedFinancialProject {
  id                   String           @id @default(auto()) @map("_id") @db.ObjectId
  project              FinancialProject @relation(fields: [financial_project_id], references: [id])
  financial_project_id String           @db.ObjectId
  sharedUser           User             @relation(fields: [userId], references: [id])
  userId               String           @db.ObjectId
}

model Resource {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  link    String
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @db.ObjectId
}
